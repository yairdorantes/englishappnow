{"ast":null,"code":"var AWS = require('./core');\n\nvar SequentialExecutor = require('./sequential_executor');\n\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\n\n\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {}\n  /* doc hack */\n\n};\n/**\n * @api private\n */\n\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n/**\n * @api private\n */\n\n\nfunction getIdentityType(req) {\n  var service = req.service;\n\n  if (service.config.signatureVersion) {\n    return service.config.signatureVersion;\n  }\n\n  if (service.api.signatureVersion) {\n    return service.api.signatureVersion;\n  }\n\n  return getOperationAuthtype(req);\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function (add, addAsync) {\n    addAsync('VALIDATE_CREDENTIALS', 'validate', function VALIDATE_CREDENTIALS(req, done) {\n      if (!req.service.api.signatureVersion && !req.service.config.signatureVersion) return done(); // none\n\n      var identityType = getIdentityType(req);\n\n      if (identityType === 'bearer') {\n        req.service.config.getToken(function (err) {\n          if (err) {\n            req.response.error = AWS.util.error(err, {\n              code: 'TokenError'\n            });\n          }\n\n          done();\n        });\n        return;\n      }\n\n      req.service.config.getCredentials(function (err) {\n        if (err) {\n          req.response.error = AWS.util.error(err, {\n            code: 'CredentialsError',\n            message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1'\n          });\n        }\n\n        done();\n      });\n    });\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.isGlobalEndpoint) {\n        var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n\n        if (!req.service.config.region) {\n          req.response.error = AWS.util.error(new Error(), {\n            code: 'ConfigError',\n            message: 'Missing region in config'\n          });\n        } else if (!dnsHostRegex.test(req.service.config.region)) {\n          req.response.error = AWS.util.error(new Error(), {\n            code: 'ConfigError',\n            message: 'Invalid region in config'\n          });\n        }\n      }\n    });\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n\n      var operation = req.service.api.operations[req.operation];\n\n      if (!operation) {\n        return;\n      }\n\n      var idempotentMembers = operation.idempotentMembers;\n\n      if (!idempotentMembers.length) {\n        return;\n      } // creates a copy of params so user's param object isn't mutated\n\n\n      var params = AWS.util.copy(req.params);\n\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n\n      req.params = params;\n    });\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n    add('COMPUTE_CHECKSUM', 'afterBuild', function COMPUTE_CHECKSUM(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n\n      var operation = req.service.api.operations[req.operation];\n\n      if (!operation) {\n        return;\n      }\n\n      var body = req.httpRequest.body;\n      var isNonStreamingPayload = body && (AWS.util.Buffer.isBuffer(body) || typeof body === 'string');\n      var headers = req.httpRequest.headers;\n\n      if (operation.httpChecksumRequired && req.service.config.computeChecksums && isNonStreamingPayload && !headers['Content-MD5']) {\n        var md5 = AWS.util.crypto.md5(body, 'base64');\n        headers['Content-MD5'] = md5;\n      }\n    });\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n\n      if (!req.service.api.operations) {\n        return;\n      }\n\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion) return done(); // none\n\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n\n        AWS.util.computeSha256(body, function (err, sha) {\n          if (err) {\n            done(err);\n          } else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n\n          throw err;\n        }\n      }\n    });\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n    add('SET_TRACE_ID', 'afterBuild', function SET_TRACE_ID(req) {\n      var traceIdHeaderName = 'X-Amzn-Trace-Id';\n\n      if (AWS.util.isNode() && !Object.hasOwnProperty.call(req.httpRequest.headers, traceIdHeaderName)) {\n        var ENV_LAMBDA_FUNCTION_NAME = 'AWS_LAMBDA_FUNCTION_NAME';\n        var ENV_TRACE_ID = '_X_AMZN_TRACE_ID';\n        var functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n        var traceId = process.env[ENV_TRACE_ID];\n\n        if (typeof functionName === 'string' && functionName.length > 0 && typeof traceId === 'string' && traceId.length > 0) {\n          req.httpRequest.headers[traceIdHeaderName] = traceId;\n        }\n      }\n    });\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n      this.httpRequest = new AWS.HttpRequest(this.service.endpoint, this.service.region);\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var identityType = getIdentityType(req);\n      if (!identityType || identityType.length === 0) return done(); // none\n\n      if (identityType === 'bearer') {\n        service.config.getToken(function (err, token) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n\n          try {\n            var SignerClass = service.getSignerClass(req);\n            var signer = new SignerClass(req.httpRequest);\n            signer.addAuthorization(token);\n          } catch (e) {\n            req.response.error = e;\n          }\n\n          done();\n        });\n      } else {\n        service.config.getCredentials(function (err, credentials) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n\n          try {\n            var date = service.getSkewCorrectedDate();\n            var SignerClass = service.getSignerClass(req);\n            var operations = req.service.api.operations || {};\n            var operation = operations[req.operation];\n            var signer = new SignerClass(req.httpRequest, service.getSigningName(req), {\n              signatureCache: service.config.signatureCache,\n              operation: operation,\n              signatureVersion: service.api.signatureVersion\n            });\n            signer.setServiceClientId(service._clientId); // clear old authorization headers\n\n            delete req.httpRequest.headers['Authorization'];\n            delete req.httpRequest.headers['Date'];\n            delete req.httpRequest.headers['X-Amz-Date']; // add new authorization\n\n            signer.addAuthorization(credentials, date);\n            req.signedAt = date;\n          } catch (e) {\n            req.response.error = e;\n          }\n\n          done();\n        });\n      }\n    });\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(), {\n          code: 'UnknownError',\n          message: 'An unknown error occurred.'\n        });\n      }\n    });\n    add('ERROR', 'error', function ERROR(err, resp) {\n      var awsQueryCompatible = resp.request.service.api.awsQueryCompatible;\n\n      if (awsQueryCompatible) {\n        var headers = resp.httpResponse.headers;\n        var queryErrorCode = headers ? headers['x-amzn-query-error'] : undefined;\n\n        if (queryErrorCode && queryErrorCode.includes(';')) {\n          resp.error.code = queryErrorCode.split(';')[0];\n        }\n      }\n    }, true);\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit('httpHeaders', [statusCode, headers, resp, statusMessage]);\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) {\n              // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else {\n              // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && operation.hasEventOutput && service.successfulResponse(resp)) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function () {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions, callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n\n      if (timeDiff >= 60 * 10) {\n        // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function (err) {\n          if (err) done(err);else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n    add('HTTP_HEADERS', 'httpHeaders', function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n\n        if (service.config.correctClockSkew && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = {\n            loaded: resp.httpResponse.numBytes,\n            total: total\n          };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n\n      if (this.service.clockSkewError(resp.error) && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 && resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint = new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;\n        }\n      }\n    });\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay,\n          willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      } // delay < 0 is a signal from customBackoff to skip retries\n\n\n      if (willRetry && delay >= 0) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n  CorePost: new SequentialExecutor().addNamedListeners(function (add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      function isDNSError(err) {\n        return err.errno === 'ENOTFOUND' || typeof err.errno === 'number' && typeof AWS.util.getSystemErrorName === 'function' && ['EAI_NONAME', 'EAI_NODATA'].indexOf(AWS.util.getSystemErrorName(err.errno) >= 0);\n      }\n\n      if (err.code === 'NetworkingError' && isDNSError(err)) {\n        var message = 'Inaccessible host: `' + err.hostname + '\\' at port `' + err.port + '\\'. This service may not be available in the `' + err.region + '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n  Logger: new SequentialExecutor().addNamedListeners(function (add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n\n        if (inputShape.isSensitive) {\n          return '***SensitiveInformation***';\n        }\n\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function (subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function (subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function (key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n\n          default:\n            return shape;\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n\n        if (req.service.api.operations && req.service.api.operations[req.operation] && req.service.api.operations[req.operation].input) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n\n        var params = require('util').inspect(censoredParams, true, null);\n\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n  Json: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/json');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  Rest: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  RestJson: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest_json');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n    add('UNSET_CONTENT_LENGTH', 'afterBuild', svc.unsetContentLength);\n  }),\n  RestXml: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest_xml');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  Query: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/query');\n\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};","map":{"version":3,"names":["AWS","require","SequentialExecutor","DISCOVER_ENDPOINT","discoverEndpoint","EventListeners","Core","getOperationAuthtype","req","service","api","operations","operation","authtype","getIdentityType","config","signatureVersion","addNamedListeners","add","addAsync","VALIDATE_CREDENTIALS","done","identityType","getToken","err","response","error","util","code","getCredentials","message","VALIDATE_REGION","isGlobalEndpoint","dnsHostRegex","RegExp","region","Error","test","BUILD_IDEMPOTENCY_TOKENS","idempotentMembers","length","params","copy","i","iLen","uuid","v4","VALIDATE_PARAMETERS","rules","input","validation","paramValidation","ParamValidator","validate","COMPUTE_CHECKSUM","body","httpRequest","isNonStreamingPayload","Buffer","isBuffer","headers","httpChecksumRequired","computeChecksums","md5","crypto","COMPUTE_SHA256","haltHandlersOnError","getSignerClass","Signers","V4","indexOf","computeSha256","sha","SET_CONTENT_LENGTH","payloadMember","getRequestPayloadShape","undefined","string","byteLength","isStreaming","requiresLength","SET_HTTP_HOST","endpoint","host","SET_TRACE_ID","traceIdHeaderName","isNode","Object","hasOwnProperty","call","ENV_LAMBDA_FUNCTION_NAME","ENV_TRACE_ID","functionName","process","env","traceId","RESTART","retryable","HttpRequest","retryCount","maxRetries","addToHead","SIGN","token","SignerClass","signer","addAuthorization","e","credentials","date","getSkewCorrectedDate","getSigningName","signatureCache","setServiceClientId","_clientId","signedAt","VALIDATE_RESPONSE","resp","successfulResponse","data","ERROR","awsQueryCompatible","request","httpResponse","queryErrorCode","includes","split","SEND","_abortCallback","callback","httpResp","stream","operationName","on","onHeaders","statusCode","statusMessage","emit","streaming","HttpClient","streamsApiVersion","hasEventOutput","onReadable","read","onData","onEnd","didCallback","progress","onSendProgress","value","onReceiveProgress","errCode","hostname","executeSend","http","getInstance","httpOptions","handleRequest","timeDiff","HTTP_HEADERS","buffer","toBuffer","buffers","numBytes","dateHeader","Date","serverTime","parse","correctClockSkew","isClockSkewed","applyClockOffset","HTTP_DATA","chunk","total","loaded","push","HTTP_DONE","concat","FINALIZE_ERROR","retryableError","INVALIDATE_CREDENTIALS","expired","EXPIRED_SIGNATURE","match","CLOCK_SKEWED","clockSkewError","REDIRECT","Endpoint","redirect","RETRY_CHECK","redirectCount","maxRedirects","retryDelay","retryDelays","RESET_RETRY_STATE","delay","willRetry","setTimeout","CorePost","extractRequestId","ENOTFOUND_ERROR","isDNSError","errno","getSystemErrorName","port","originalError","Logger","LOG_REQUEST","logger","filterSensitiveLog","inputShape","shape","isSensitive","type","struct","each","subShapeName","subShape","prototype","members","list","arrayEach","index","member","map","key","buildMessage","time","getTime","delta","startTime","ansi","isTTY","status","censoredParams","inspect","serviceIdentifier","toString","lowerFirst","line","log","write","Json","svc","buildRequest","extractData","extractError","Rest","RestJson","unsetContentLength","RestXml","Query"],"sources":["/home/yair/Desktop/Programming/what i delete form project/node_modules/aws-sdk/lib/event_listeners.js"],"sourcesContent":["var AWS = require('./core');\nvar SequentialExecutor = require('./sequential_executor');\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {} /* doc hack */\n};\n\n/**\n * @api private\n */\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\n/**\n * @api private\n */\nfunction getIdentityType(req) {\n  var service = req.service;\n\n  if (service.config.signatureVersion) {\n    return service.config.signatureVersion;\n  }\n\n  if (service.api.signatureVersion) {\n    return service.api.signatureVersion;\n  }\n\n  return getOperationAuthtype(req);\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function(add, addAsync) {\n    addAsync(\n      'VALIDATE_CREDENTIALS', 'validate',\n      function VALIDATE_CREDENTIALS(req, done) {\n        if (!req.service.api.signatureVersion && !req.service.config.signatureVersion) return done(); // none\n\n        var identityType = getIdentityType(req);\n        if (identityType === 'bearer') {\n          req.service.config.getToken(function(err) {\n            if (err) {\n              req.response.error = AWS.util.error(err, {code: 'TokenError'});\n            }\n            done();\n          });\n          return;\n        }\n\n        req.service.config.getCredentials(function(err) {\n          if (err) {\n            req.response.error = AWS.util.error(err,\n              {\n                code: 'CredentialsError',\n                message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1'\n              }\n            );\n          }\n          done();\n        });\n    });\n\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.isGlobalEndpoint) {\n        var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n        if (!req.service.config.region) {\n          req.response.error = AWS.util.error(new Error(),\n            {code: 'ConfigError', message: 'Missing region in config'});\n        } else if (!dnsHostRegex.test(req.service.config.region)) {\n          req.response.error = AWS.util.error(new Error(),\n            {code: 'ConfigError', message: 'Invalid region in config'});\n        }\n      }\n    });\n\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var idempotentMembers = operation.idempotentMembers;\n      if (!idempotentMembers.length) {\n        return;\n      }\n      // creates a copy of params so user's param object isn't mutated\n      var params = AWS.util.copy(req.params);\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n      req.params = params;\n    });\n\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n\n    add('COMPUTE_CHECKSUM', 'afterBuild', function COMPUTE_CHECKSUM(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var body = req.httpRequest.body;\n      var isNonStreamingPayload = body && (AWS.util.Buffer.isBuffer(body) || typeof body === 'string');\n      var headers = req.httpRequest.headers;\n      if (\n        operation.httpChecksumRequired &&\n        req.service.config.computeChecksums &&\n        isNonStreamingPayload &&\n        !headers['Content-MD5']\n      ) {\n        var md5 = AWS.util.crypto.md5(body, 'base64');\n        headers['Content-MD5'] = md5;\n      }\n    });\n\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion) return done(); // none\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n        AWS.util.computeSha256(body, function(err, sha) {\n          if (err) {\n            done(err);\n          }\n          else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n          throw err;\n        }\n      }\n    });\n\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n\n    add('SET_TRACE_ID', 'afterBuild', function SET_TRACE_ID(req) {\n      var traceIdHeaderName = 'X-Amzn-Trace-Id';\n      if (AWS.util.isNode() && !Object.hasOwnProperty.call(req.httpRequest.headers, traceIdHeaderName)) {\n        var ENV_LAMBDA_FUNCTION_NAME = 'AWS_LAMBDA_FUNCTION_NAME';\n        var ENV_TRACE_ID = '_X_AMZN_TRACE_ID';\n        var functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n        var traceId = process.env[ENV_TRACE_ID];\n        if (\n          typeof functionName === 'string' &&\n          functionName.length > 0 &&\n          typeof traceId === 'string' &&\n          traceId.length > 0\n        ) {\n          req.httpRequest.headers[traceIdHeaderName] = traceId;\n        }\n      }\n    });\n\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n\n      this.httpRequest = new AWS.HttpRequest(\n        this.service.endpoint,\n        this.service.region\n      );\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var identityType = getIdentityType(req);\n      if (!identityType || identityType.length === 0) return done(); // none\n\n      if (identityType === 'bearer') {\n        service.config.getToken(function (err, token) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n\n          try {\n            var SignerClass = service.getSignerClass(req);\n            var signer = new SignerClass(req.httpRequest);\n            signer.addAuthorization(token);\n          } catch (e) {\n            req.response.error = e;\n          }\n          done();\n        });\n      } else {\n        service.config.getCredentials(function (err, credentials) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n\n          try {\n            var date = service.getSkewCorrectedDate();\n            var SignerClass = service.getSignerClass(req);\n            var operations = req.service.api.operations || {};\n            var operation = operations[req.operation];\n            var signer = new SignerClass(req.httpRequest,\n              service.getSigningName(req),\n              {\n                signatureCache: service.config.signatureCache,\n                operation: operation,\n                signatureVersion: service.api.signatureVersion\n              });\n            signer.setServiceClientId(service._clientId);\n\n            // clear old authorization headers\n            delete req.httpRequest.headers['Authorization'];\n            delete req.httpRequest.headers['Date'];\n            delete req.httpRequest.headers['X-Amz-Date'];\n\n            // add new authorization\n            signer.addAuthorization(credentials, date);\n            req.signedAt = date;\n          } catch (e) {\n            req.response.error = e;\n          }\n          done();\n        });\n\n      }\n    });\n\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(),\n          {code: 'UnknownError', message: 'An unknown error occurred.'});\n      }\n    });\n\n    add('ERROR', 'error', function ERROR(err, resp) {\n      var awsQueryCompatible = resp.request.service.api.awsQueryCompatible;\n      if (awsQueryCompatible) {\n        var headers = resp.httpResponse.headers;\n        var queryErrorCode = headers ? headers['x-amzn-query-error'] : undefined;\n        if (queryErrorCode && queryErrorCode.includes(';')) {\n          resp.error.code = queryErrorCode.split(';')[0];\n        }\n      }\n    }, true);\n\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit(\n            'httpHeaders',\n            [statusCode, headers, resp, statusMessage]\n          );\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) { // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else { // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && (operation.hasEventOutput && service.successfulResponse(resp))) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function() {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions,\n                                          callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n      if (timeDiff >= 60 * 10) { // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function(err) {\n          if (err) done(err);\n          else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n\n    add('HTTP_HEADERS', 'httpHeaders',\n        function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n        if (service.config.correctClockSkew\n            && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = { loaded: resp.httpResponse.numBytes, total: total };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n      if (this.service.clockSkewError(resp.error)\n          && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 &&\n          resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint =\n          new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;\n        }\n      }\n    });\n\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay, willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      // delay < 0 is a signal from customBackoff to skip retries\n      if (willRetry && delay >= 0) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n\n  CorePost: new SequentialExecutor().addNamedListeners(function(add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      function isDNSError(err) {\n        return err.errno === 'ENOTFOUND' ||\n          typeof err.errno === 'number' &&\n          typeof AWS.util.getSystemErrorName === 'function' &&\n          ['EAI_NONAME', 'EAI_NODATA'].indexOf(AWS.util.getSystemErrorName(err.errno) >= 0);\n      }\n      if (err.code === 'NetworkingError' && isDNSError(err)) {\n        var message = 'Inaccessible host: `' + err.hostname + '\\' at port `' + err.port +\n          '\\'. This service may not be available in the `' + err.region +\n          '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n\n  Logger: new SequentialExecutor().addNamedListeners(function(add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n        if (inputShape.isSensitive) {\n          return '***SensitiveInformation***';\n        }\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function(subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function(subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function(key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n          default:\n            return shape;\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n        if (\n          req.service.api.operations &&\n              req.service.api.operations[req.operation] &&\n              req.service.api.operations[req.operation].input\n        ) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n        var params = require('util').inspect(censoredParams, true, null);\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n\n  Json: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Rest: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestJson: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n    add('UNSET_CONTENT_LENGTH', 'afterBuild', svc.unsetContentLength);\n  }),\n\n  RestXml: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_xml');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Query: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/query');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}